{"version":3,"file":"static/js/751.71c7f002.chunk.js","mappings":"4NACA,EAAuB,0BAAvB,EAA6D,+BAA7D,EAAwG,+B,uCCI3FA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,IAkBlC,GAAwBC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,OAAQ,KAArD,eAAOC,EAAP,KAAaC,EAAb,KACQH,EAAiBE,EAAjBF,KAAMC,EAAWC,EAAXD,OAERG,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACdH,GAAQ,SAAAI,GAAI,yBAAUA,GAAV,cAAiBP,EAAOM,GAAxB,GACb,EAYD,OACE,kBAAME,UAAWC,EAAUC,SAZR,SAAAC,GACnBA,EAAEC,iBAxBqB,SAAAC,GACMlB,EAASmB,MACpC,SAAAC,GAAO,OACLA,EAAQf,KAAKgB,gBAAkBH,EAAab,KAAKgB,eACjDD,EAAQd,SAAWY,EAAaZ,MAF3B,IAMPgB,MAAM,GAAD,OACAJ,EAAab,KADb,eACwBa,EAAaZ,OADrC,4BAKPR,GAASyB,EAAAA,EAAAA,IAAWL,GACrB,CAgBCM,CALqB,CACnBnB,KAAMA,EACNC,OAAQA,IAIVE,EAAQ,CAAEH,KAAM,GAAIC,OAAQ,IAC7B,EAGC,WACE,4BACE,kBACEmB,KAAK,OACLd,MAAON,EACPqB,SAAUjB,EACVJ,KAAK,OACLsB,YAAY,OACZC,MAAM,yIACNC,UAAQ,EACRhB,UAAWC,OAGf,4BACE,kBACEW,KAAK,MACLd,MAAOL,EACPoB,SAAUjB,EACVJ,KAAK,SACLsB,YAAY,SACZG,QAAQ,qGACRF,MAAM,+FACNC,UAAQ,EACRhB,UAAWC,OAGf,mBAAQD,UAAWC,EAAnB,SAAkC,kBAGvC,ECxED,EAAuB,2BAAvB,EAA6D,+BAA7D,EAAwG,gC,UCK3FiB,EAAe,WAC1B,IAAMjC,GAAWC,EAAAA,EAAAA,OAEjBiC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,IAEJ,IAIMoC,GAAiBjC,EAAAA,EAAAA,IAAYkC,EAAAA,IACnC,OACE,eAAItB,UAAWC,EAAf,SACGoB,EAAeE,KAAI,SAAAhB,GAClB,IAAQiB,EAAqBjB,EAArBiB,GAAIhC,EAAiBe,EAAjBf,KAAMC,EAAWc,EAAXd,OAClB,OACE,gBAAIO,UAAWC,EAAf,WACE,4BAAOT,EAAK,QACZ,0BAAOC,KACP,mBACEmB,KAAK,SACLZ,UAAWC,EACXwB,QAAS,kBAhBAC,EAgBmBF,OAftCvC,GAAS0C,EAAAA,EAAAA,IAAcD,IADJ,IAAAA,CAgBA,EAHX,SAIC,aAP+BF,EAYrC,KAGN,E,UClCYI,EAAS,WACpB,IAAM3C,GAAWC,EAAAA,EAAAA,MACX2C,GAASzC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMwC,MAAV,IAKhC,OACE,iCACE,uBAAG,2BACH,kBACEjB,KAAK,OACLd,MAAO+B,EACPrC,KAAK,SACLqB,SAXqB,SAAAV,GACzBlB,GAAS6C,EAAAA,EAAAA,GAAU3B,EAAEN,OAAOC,OAC7B,EAUKgB,YAAY,4BAInB,E,UCLD,EAZqB,WACnB,OACE,iBAAKd,UAAWC,EAAAA,GAAAA,UAAhB,WACE,wBAAI,eACJ,SAACjB,EAAD,KACA,wBAAI,cACJ,SAAC4C,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formInput\":\"ContactForm_formInput__GszVU\",\"btnDelete\":\"ContactForm_btnDelete__e5GFa\",\"glowing\":\"ContactForm_glowing__5pbUu\"};","import css from './ContactForm.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsReducer';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  const handleAddContact = userContacts => {\n    const hasDuplicateContacts = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === userContacts.name.toLowerCase() ||\n        contact.number === userContacts.number\n    );\n\n    if (hasDuplicateContacts) {\n      alert(\n        `${userContacts.name} or ${userContacts.number} is already in contacts`\n      );\n      return;\n    }\n    dispatch(addContact(userContacts));\n  };\n\n  const [data, setData] = useState({ name: '', number: '' });\n  const { name, number } = data;\n\n  const handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    setData(prev => ({ ...prev, [name]: value }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userContacts = {\n      name: name,\n      number: number,\n    };\n\n    handleAddContact(userContacts);\n    setData({ name: '', number: '' });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={handleInputChange}\n          name=\"name\"\n          placeholder=\"Name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.formInput}\n        />\n      </label>\n      <label>\n        <input\n          type=\"tel\"\n          value={number}\n          onChange={handleInputChange}\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.formInput}\n        />\n      </label>\n      <button className={css.btnDelete}>Add contact</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"contacts\":\"ContactsList_contacts__gnzMi\",\"btnDelete\":\"ContactsList_btnDelete__bDwNP\",\"glowing\":\"ContactsList_glowing__ALJli\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactsList.module.css';\nimport { deleteContact, fetchContacts } from 'redux/contactsReducer';\nimport { useEffect } from 'react';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const contactsFilter = useSelector(selectVisibleContacts);\n  return (\n    <ul className={css.list}>\n      {contactsFilter.map(contact => {\n        const { id, name, number } = contact;\n        return (\n          <li className={css.contacts} key={id}>\n            <span>{name}:</span>\n            <span>{number}</span>\n            <button\n              type=\"button\"\n              className={css.btnDelete}\n              onClick={() => handleDelete(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleFilterChange}\n        placeholder=\"Find contacts by name\"\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport React from 'react';\nimport { css } from 'styled-components';\n\nconst ContactsPage = () => {\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","useState","name","number","data","setData","handleInputChange","target","value","prev","className","css","onSubmit","e","preventDefault","userContacts","some","contact","toLowerCase","alert","addContact","handleAddContact","type","onChange","placeholder","title","required","pattern","ContactsList","useEffect","fetchContacts","contactsFilter","selectVisibleContacts","map","id","onClick","contactId","deleteContact","Filter","filter","setFilter"],"sourceRoot":""}